#include "helpers.hpp"

#include <ethash/endianness.hpp>
#include <ethash/progpow.hpp>
#include <ethash/keccak.hpp>
#include <gtest/gtest.h>

#include <array>


TEST(asic, search)
{
    auto ctxp = ethash::create_epoch_context(0);
    ASSERT_NE(ctxp, nullptr);
    auto& ctx = *ctxp;

    auto parent = to_hash256("f4ac202715ded4136e72887c39e63a4738331c57fd9eb79f6ec421c281aa8743");
    auto boundary = to_hash256("00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
    auto sr = progpow::search_asic(ctx, 0, {parent, 0}, boundary, 0, 1024, 0, uint64_t(1) << 36);

    std::cout << "nonce = " << sr.nonce << std::endl;
    std::cout << "extra nonce = " << sr.extra_nonce << std::endl;

    ethash::block_header header{ parent, sr.extra_nonce };
    ethash::hash256 header_hash = ethash_keccak256((const uint8_t *)&header, sizeof header);
    auto success = progpow::verify(
        ctx, 0, header_hash, sr.mix_hash, sr.nonce, sr.final_hash);
    EXPECT_TRUE(success);
}
